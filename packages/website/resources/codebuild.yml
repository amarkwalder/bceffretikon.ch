Resources:
  CodeBuild:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: bceffretikon-ch-website-codebuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        # The downloaded source code for the build will come from CodePipeline
        Type: CODEPIPELINE
        Name: bceffretikon-ch-website
      Environment:
        # Linux container with node installed
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:3.0"
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          env:
            secrets-manager:
              REACT_APP_GITHUB_CLIENT_ID: "bceffretikon-ch-secrets:GitHubClientId"
              REACT_APP_GITHUB_SOURCE_REPO_OWNER:  "bceffretikon-ch-secrets:SourceRepoOwner" 
              REACT_APP_GITHUB_SOURCE_REPO_NAME:  "bceffretikon-ch-secrets:SourceRepoName" 
              SIGNING_KEY: "bceffretikon-ch-secrets:SigningKey"
              GITHUB_CLIENT_SECRET: "bceffretikon-ch-secrets:GitHubClientSecret"
          phases:
            pre_build:
              commands:
                - echo Installing source NPM dependencies...
                - yarn install
            build:
              commands:
                - echo Build started on `date`
                - yarn website build
            post_build:
              commands:
                # empty the s3 bucket
                - aws s3 rm s3://bceffretikon-ch-website --recursive
                # copy the contents of /build to S3
                - aws s3 cp --recursive --acl public-read ./packages/website/build s3://bceffretikon-ch-website
                # set the cache-control headers for service-worker.js to prevent
                # browser caching
                - >
                  aws s3 cp --acl public-read 
                  --cache-control="max-age=0, no-cache, no-store, must-revalidate" 
                  ./packages/website/build/service-worker.js s3://bceffretikon-ch-website
                # set the cache-control headers for index.html to prevent
                # browser caching
                - >
                  aws s3 cp --acl public-read 
                  --cache-control="max-age=0, no-cache, no-store, must-revalidate" 
                  ./packages/website/build/index.html s3://bceffretikon-ch-website
          artifacts:
            files:
              - '**/*'
  # IAM role that allows CodeBuild to interact with S3, CloudWatch, and CloudFront
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource:
                  - !GetAtt PipelineBucket.Arn
                  - !Join ["", [!GetAtt PipelineBucket.Arn, "/*"]]
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:ListBucket"
                  - "s3:DeleteObject"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - !GetAtt Website.Arn
                  - !Join ["", [!GetAtt Website.Arn, "/*"]]
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - "arn:aws:secretsmanager:*:*:secret:bceffretikon-ch-secrets-*"
